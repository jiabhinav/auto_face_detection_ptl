plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    //id 'com.android.library'
   // id 'maven-publish'
    id 'kotlin-android'
    id 'kotlin-kapt'

}

android {
    signingConfigs {
        realease {
        }
    }
    compileSdk 32
    defaultConfig {
        applicationId "com.developer.objectproof"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        /*ndk {
            abiFilters  "armeabi-v7a", "x86" , "arm64-v8a"
        }*/
    }
    aaptOptions {
        noCompress "tflite"
    }
   /* buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }*/
    dataBinding{
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs +=["-Xjvm-default=all",]
    }

    packagingOptions {
        exclude 'META-INF/*'
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

   /* sourceSets.main {
        assets.srcDirs = ['assets']
    }*/

    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.0-alpha01"

    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'


    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Retrofit & OkHttp
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'

    def cameraxVersion = "1.2.0-alpha03"
    implementation "androidx.camera:camera-core:${cameraxVersion}"
    implementation "androidx.camera:camera-camera2:${cameraxVersion}"
    implementation "androidx.camera:camera-lifecycle:${cameraxVersion}"
    // CameraX View class
    implementation "androidx.camera:camera-view:${cameraxVersion}"

   /* implementation 'org.tensorflow:tensorflow-lite-task-vision:0.4.0'
    // Import the GPU delegate plugin Library for GPU inference
    implementation 'org.tensorflow:tensorflow-lite-gpu-delegate-plugin:0.4.0'
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.9.0'
    implementation 'org.tensorflow:tensorflow-lite-metadata:0.1.0'*/

    //animation
    implementation 'com.airbnb.android:lottie:3.0.1'

  //=================pytorch=========
    implementation 'org.pytorch:pytorch_android_lite:1.9.0'
    implementation 'org.pytorch:pytorch_android_torchvision:1.9.0'

   // ==========face Detector=================
    implementation 'com.google.mlkit:face-detection:16.1.5'
    implementation 'com.google.mlkit:object-detection:17.0.0'

   // implementation 'com.github.jiabhinav:auto_face_detection_ptl:1.0'

    // Room components
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
    androidTestImplementation "androidx.room:room-testing:$rootProject.roomVersion"

    //Dagger Inject
    def dagger_version = "2.40.5"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation 'com.google.mlkit:object-detection:17.0.0'
    implementation 'com.google.mlkit:object-detection-custom:17.0.0'

    implementation 'com.intuit.sdp:sdp-android:1.1.0'




}

